<UserControl x:Class="WorkbenchWPF.Views.TradeView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WorkbenchWPF.Views"
             mc:Ignorable="d" 
             d:DesignHeight="713" d:DesignWidth="1028">
    
    <!--#region Static Resources-->
    <UserControl.Resources>
        
        <!--#region Text Header Style-->
        <Style x:Key="font_style" TargetType="TextBlock">
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="#6458FF"/>
            <Setter Property="FontSize" Value="12"/>
        </Style>
        <!--#endregion-->
        
        <!--#region Button image expand template -->
        <ImageBrush x:Key="expandGrayIcon" ImageSource="../Assets/Icons/expand_arrow_50px_gray.png"/>
        <ImageBrush x:Key="expandPurpleIcon" ImageSource="../Assets/Icons/expand_arrow_50px_purple.png"/>
        <ImageBrush x:Key="collapseGrayIcon" ImageSource="../Assets/Icons/collapse_arrow_50px_gray.png"/>
        <ImageBrush x:Key="collapsePurpleIcon" ImageSource="../Assets/Icons/collapse_arrow_50px_purple.png"/>
        <!--#endregion-->

        <!--#region ToggleButton style-->
        <Style x:Key="toggleButton_style" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="MyToggleButton"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="True">
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background"
                                        TargetName="MyToggleButton"
                                        Value="{StaticResource collapsePurpleIcon}"/>
                            </Trigger>

                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Background"
                                        TargetName="MyToggleButton"
                                        Value="{StaticResource expandPurpleIcon}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->

        <!--#region TextBox Form Manual -->
        <Style x:Key="TextBoxFormManual" TargetType="TextBox">
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Width" Value="150"/>
            <Setter Property="Height" Value="23"/>            
            <Setter Property="Margin" Value="0 5 0 0"/>            
        </Style>
        <!--#endregion-->
        
    </UserControl.Resources>
    <!--#endregion-->
    
    <Grid Background="#1c1c1c">        
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>            
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="45"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="45"/>
            <RowDefinition MinHeight="0" Height="auto" MaxHeight="300"/>
        </Grid.RowDefinitions>

        <DataGrid x:Name="Operation" Grid.RowSpan="2">

            <!--#region Font Color / Style for the Column headings-->           
            <DataGrid.Resources>
                <Style TargetType="DataGrid">
                    <Setter Property="AlternatingRowBackground" Value="#c1c1c1"/>
                    <Setter Property="RowBackground" Value="white"/>
                    <Setter Property="Foreground" Value="#1c1c1c" />
                    <Setter Property="Background" Value="#1c1c1c"/>
                    <Setter Property="Margin" Value="0"/>
                    <Setter Property="Padding" Value="0"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    
                    <Setter Property="GridLinesVisibility" Value="Horizontal"/>
                    <Setter Property="VerticalGridLinesBrush" Value="#6458FF"/>
                    <Setter Property="HorizontalGridLinesBrush" Value="#6458FF"/>

                    <Setter Property="AutoGenerateColumns" Value="False"/>

                    <Setter Property="HeadersVisibility" Value="Column"/>                   
                    <Setter Property="CanUserAddRows" Value="False"/>
                    <Setter Property="CanUserResizeColumns" Value="False"/>
                </Style>
                
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="Background" Value="#1c1c1c"/>
                    <Setter Property="Height" Value="45"/>
                    <Setter Property="Foreground" Value="#6458FF"/>
                    <Setter Property="FontSize" Value="13"/>
                    <Setter Property="FontWeight" Value="SemiBold"/>
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                </Style>

                <Style TargetType="{x:Type DataGridCell}">
                    <Setter Property="Margin" Value="0"/>
                    <Setter Property="Padding" Value="0"/>
                    <Setter Property="Height" Value="45"/>
                    <Setter Property="BorderThickness" Value="0"/>

                    <Setter Property="FontSize" Value="13"/>
                    <Setter Property="FontWeight" Value="Regular"/>

                    <Style.Triggers>
                        <Trigger Property="DataGridCell.IsSelected" Value="True">
                            <Setter Property="Background" Value="{StaticResource ForegroundDarkGrayBrush}" />                            
                            <Setter Property="Foreground" Value="white" />
                            <Setter Property="FontWeight" Value="SemiBold" />
                        </Trigger>
                        
                    </Style.Triggers>
                </Style>
                
                <!--<Style TargetType="{x:Type ScrollBar}">
                    <Setter Property="Background" Value="red" />
                </Style>-->

                <!--<SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#6458FF"/>-->
            </DataGrid.Resources>
            
            <!--#endregion-->
            
            <!--#region Column Header Text and Bindings-->
            <DataGrid.Columns>                    
                
                <!--#region Image-->
                <DataGridTemplateColumn Header="" Width="70">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Image Width="25" Height="25" IsEnabled="False" Stretch="Fill">
                                <Image.Style>
                                    <Style TargetType="{x:Type Image}">
                                        <Setter Property="Source" Value="../Assets/Icons/increase_50px_purple.png"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsWorst}" Value="True">
                                                <Setter Property="Source" Value="../Assets/Icons/decrease_50px.png"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                        </DataTemplate>                        
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!--#endregion-->
                
                <!--#region Date-->
                <DataGridTemplateColumn Header="DATE"  Width="200">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Path=Date, ConverterCulture=pt-BR, StringFormat={}{0:dddd dd/MM/yyyy}}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!--#endregion-->
                
                <!--region Active-->
                <DataGridTemplateColumn Header="ACTIVE"  Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Path=Active}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>                   
                </DataGridTemplateColumn>
                <!--#endregion-->

                <!--#region OP win-->
                <DataGridTemplateColumn Header="OP. WIN"  Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Path=OpWin}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!--#endregion-->

                <!--#region Op loss-->
                <DataGridTemplateColumn Header="OP. LOSS"  Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Path=OpLoss}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!--#endregion-->

                <!--#region Winrate-->
                <DataGridTemplateColumn Header="WINRATE"  Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Path=WinRate, StringFormat={}{0:#0.00'%'}}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!--#endregion-->

                <!--#region Contract-->
                <DataGridTemplateColumn Header="CONTRACT"  Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Path=Contract}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!--#endregion-->

                <!--#region win-->
                <DataGridTemplateColumn Header="WIN"  Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Path=Win, ConverterCulture=pt-BR, StringFormat={}{0:C}}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!--#endregion-->

                <!--#region Loss-->
                <DataGridTemplateColumn Header="LOSS"  Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Path=Loss, ConverterCulture=pt-BR, StringFormat={}{0:C}}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!--#endregion-->

                <!--#region Profit-->
                <DataGridTemplateColumn Header="PROFIT"  Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Path=Profit, ConverterCulture=pt-BR, StringFormat={}{0:C}}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!--#endregion-->
                
            </DataGrid.Columns>
            <!--#endregion-->

        </DataGrid>     

        <!--#region Toggle button Bottom Menu-->
        <Grid Background="#1c1c1c"
              Grid.Row="2"
              Grid.ColumnSpan="10">

            <ToggleButton x:Name="toggleBottomMenu" Height="25"
                          Width="25"
                          BorderThickness="0"
                          Style="{StaticResource toggleButton_style}">

                <ToggleButton.Background>
                    <ImageBrush ImageSource="../Assets/Icons/collapse_arrow_50px_gray.png" Stretch="Fill"/>
                </ToggleButton.Background>

                <ToggleButton.Triggers>
                    <EventTrigger RoutedEvent="ToggleButton.Unchecked">
                        <BeginStoryboard>
                            <Storyboard x:Name="HideStackPanel">
                                <DoubleAnimation Storyboard.TargetName="BottomBar"
                                             Storyboard.TargetProperty="Height"
                                             BeginTime="0:0:0"
                                             From="300" To="0"
                                             Duration="0:0:0.2">

                                </DoubleAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>

                    <EventTrigger RoutedEvent="ToggleButton.Checked">
                        <BeginStoryboard>
                            <Storyboard x:Name="ShowStackPanel">
                                <DoubleAnimation Storyboard.TargetName="BottomBar"
                                             Storyboard.TargetProperty="Height"
                                             BeginTime="0:0:0"
                                             From="0" To="300"
                                             Duration="0:0:0.2">
                                </DoubleAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </ToggleButton.Triggers>
            </ToggleButton>
        </Grid>
        <!--#endregion-->

        <!--#region Bottom Menu-->
        <Grid x:Name="BottomBar" 
              Grid.Row="3" 
              Grid.Column="0" Grid.ColumnSpan="10" 
              MaxHeight="300" Height="0" MinHeight="0">

            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="190"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="60" />
                <RowDefinition Height="*" />
                <RowDefinition Height="45" />
            </Grid.RowDefinitions>

            <!--#region Automatic-->
            
            <!--#region Title-->
            <StackPanel Grid.Column="0" 
                        VerticalAlignment="Center"
                        HorizontalAlignment="Center">

                <!--#region Title-->
                <TextBlock 
                       Text="AUTOMATIC" 
                       Style="{StaticResource LightGraySemibold}"
                       TextAlignment="Center"
                       Margin="0 10"/>
                <!--#endregion-->

                <!--#region Separator-->
                <Separator Background="{StaticResource ForegroundLightGrayBrush}"
                           Width="310" />
                <!--#endregion-->

            </StackPanel>
            <!--#endregion-->

            <!--#region Content-->
            <Grid Grid.Column="0"
                       Grid.Row="1"
                       Width="310"
                       Margin="20 0 20 0">

                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="90"/> <!-- 0 / 90 -->
                </Grid.RowDefinitions>
                
                <!--<Rectangle Grid.Row="0"
                           AllowDrop="True">
                    <Rectangle.Fill>
                        <ImageBrush ImageSource="../Assets/Icons/csv_50px_gray.png"  
                                Stretch="None"
                                AlignmentX="Center"
                                AlignmentY="Center"
                                RenderOptions.BitmapScalingMode="HighQuality"
                                Viewport="0.35 0.35 0.60 0.60">
                            <ImageBrush.Transform>
                                <ScaleTransform ScaleX=".8" ScaleY=".8"/>
                            </ImageBrush.Transform>
                        </ImageBrush>
                    </Rectangle.Fill>
                    <Rectangle.Style>
                        <Style TargetType="Rectangle">
                            <Setter Property="Stroke" Value="{StaticResource ForegroundLightGrayBrush}" />
                            <Setter Property="StrokeDashArray" Value="5" />
                            <Setter Property="StrokeDashCap" Value="Round" />
                        </Style>
                    </Rectangle.Style>                    
                </Rectangle>-->
                <StackPanel Grid.Row="0" 
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"
                            Background="Transparent">
                    <Image Source="../Assets/Icons/csv_50px_gray.png" Stretch="Uniform" Width="30" Height="30"></Image>
                </StackPanel>

                <Rectangle Grid.Row="0"                         
                           StrokeDashArray="5"
                           StrokeDashCap="Round"
                           Height="auto"
                           AllowDrop="True"
                           x:Name="GetDropedFile"
                           Cursor="Hand"
                           Fill="Transparent">
                    <Rectangle.Style>
                        <Style TargetType="Rectangle">
                            
                            <Setter Property="Stroke" Value="{StaticResource ForegroundLightGrayBrush}"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Stroke" Value="{StaticResource ForegroundPurpleBrush}"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                       
                    </Rectangle.Style>
                </Rectangle>

                <ScrollViewer Grid.Row="1"
                              HorizontalScrollBarVisibility="Disabled"
                              VerticalScrollBarVisibility="Hidden"
                              VerticalContentAlignment="Center">

                    <StackPanel Orientation="Vertical"
                                VerticalAlignment="Center">
                        <TextBlock Text="Drag the files above to auto insert data table!" 
                                   TextAlignment="Center"
                                   Style="{StaticResource LightGraySemibold}"
                                   Margin="10"/>

                        <ContentControl x:Name="ImportFile"/>

                    </StackPanel>

                </ScrollViewer>

            </Grid>
            <!--#endregion-->

            <!--#region Button-->
            <!--<Button Grid.Column="0"
                    Grid.Row="2"
                    FontWeight="SemiBold"
                    Width="310"
                    BorderThickness="0">
                UPLOAD

                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Background" Value="{StaticResource ForegroundLightGrayBrush}"/>
                        <Setter Property="Foreground" Value="{StaticResource ForegroundDarkGrayBrush}"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border Background="{TemplateBinding Background}">
                                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource ForegroundPurpleBrush}"/>
                                <Setter Property="Foreground" Value="{StaticResource ForegroundLightGrayBrush}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>-->
            <!--#endregion-->
            
            <!--#endregion-->

            <!--#region Image-->

            <Image Grid.Column="1" Grid.RowSpan="3" 
                   Source="../Assets/Images/zero-two-hair.png" 
                   Stretch="Uniform"
                   VerticalAlignment="Bottom"
                   RenderOptions.BitmapScalingMode="HighQuality" />

            <!--#endregion-->
            
            <!--#region Manual-->
            
            <!--#region Title-->
            <StackPanel Grid.Column="2"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Center">

                <!--#region Title-->
                <TextBlock 
                       Text="MANUAL" 
                       Style="{StaticResource LightGraySemibold}"
                    Margin="0 10"
                    TextAlignment="Center"/>
                <!--#endregion-->

                <!--#region Separator-->
                <Separator Background="{StaticResource ForegroundLightGrayBrush}"
                           Width="310"/>
                <!--#endregion-->
                
            </StackPanel>
            <!--#endregion-->

            <!--#region Content-->
            <StackPanel 
                Grid.Column="2" 
                Grid.Row="1" 
                Margin="0"
                HorizontalAlignment="Center"
                VerticalAlignment="Top">
                
                <StackPanel Orientation="Horizontal">
                    <StackPanel Margin="5">
                        <TextBlock 
                        Text="ACTIVE" 
                        Style="{StaticResource LightGrayRegular}"/>
                        <ComboBox SelectedValue="{Binding ManualComboBox}" SelectedValuePath="Content" Margin="0 5 0 0" Width="150">
                            <ComboBoxItem Content="WIN" IsSelected="True"/>
                            <ComboBoxItem Content="DOL"/>
                        </ComboBox>
                    </StackPanel>
                    <StackPanel Margin="5">
                        <TextBlock Text="CONTRACTS" Style="{StaticResource LightGrayRegular}"/>
                        <TextBox x:Name="ManualContracts" Style="{StaticResource TextBoxFormManual}"/>
                    </StackPanel>
                </StackPanel>

                <StackPanel Orientation="Horizontal">
                    <StackPanel Margin="5">
                        <TextBlock 
                        Text="OP. WIN" 
                        Style="{StaticResource LightGrayRegular}"/>
                        <TextBox x:Name="ManualOpWin" Style="{StaticResource TextBoxFormManual}"/>
                    </StackPanel>
                    <StackPanel Margin="5">
                        <TextBlock Text="OP. LOSS" Style="{StaticResource LightGrayRegular}"/>
                        <TextBox x:Name="ManualOpLoss" Style="{StaticResource TextBoxFormManual}"/>
                    </StackPanel>
                </StackPanel>

                <StackPanel Orientation="Horizontal">
                    <StackPanel Margin="5">
                        <TextBlock 
                        Text="WIN" 
                        Style="{StaticResource LightGrayRegular}"/>
                        <TextBox x:Name="ManualWin" Style="{StaticResource TextBoxFormManual}"/>
                    </StackPanel>
                    <StackPanel Margin="5">
                        <TextBlock Text="LOSS" Style="{StaticResource LightGrayRegular}"/>
                        <TextBox x:Name="ManualLoss" Style="{StaticResource TextBoxFormManual}"/>
                    </StackPanel>
                </StackPanel>

            </StackPanel>
            <!--#endregion-->

            <!--#region Button-->
            <Button x:Name="CreateOperationManual" 
                    Grid.Column="2"
                    Grid.Row="2"
                    FontWeight="SemiBold"
                    Width="310"
                    BorderThickness="0">
                CREATE

                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Background" Value="{StaticResource ForegroundLightGrayBrush}"/>
                        <Setter Property="Foreground" Value="{StaticResource ForegroundDarkGrayBrush}"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border Background="{TemplateBinding Background}">
                                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource ForegroundPurpleBrush}"/>
                                <Setter Property="Foreground" Value="{StaticResource ForegroundLightGrayBrush}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <!--#endregion-->

            <!--#endregion-->
        </Grid>
        <!--#endregion-->
        
    </Grid>
</UserControl>
